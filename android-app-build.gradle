def PROGUARD = false

def APP = [
  'VERSION_CODE'       : 1,
  'VERSION_NAME'       : '1.0.0',
  'APPLICATION_ID'     : 'com.github.kwf2030',
  'MIN_SDK_VERSION'    : 16,
  'TARGET_SDK_VERSION' : 23,
  'COMPILE_SDK_VERSION': 23,
  'BUILD_TOOLS_VERSION': '23.0.3'
]

def SIGN = [
  'STORE_FILE'    : "xxx.keystore" as File,
  'STORE_PASSWORD': "xxx",
  'KEY_ALIAS'     : "xxx",
  'KEY_PASSWORD'  : "xxx"
]

def LIB = [
  'SUPPORT'    : '23.3.0',
  'BOTTOMBAR'  : '1.3.3',
  'BUTTERKNIFE': '8.0.0',
  'DAGGER'     : '2.1',
  'GSON'       : '2.6.2',
  'OKHTTP'     : '3.2.0',
  'OKIO'       : '1.7.0',
  'RETROFIT'   : '2.0.2',
  'REQUERY'    : '1.0.0-beta16',
  'RXANDROID'  : '1.1.0',
  'RXCACHE'    : '1.2.6',
  'RXJAVA'     : '1.1.3',

  'RUNNER'     : '0.4.1',
  'RULES'      : '0.4.1',
  'DEXMAKER'   : '1.2',
  'ESPRESSO'   : '2.2.1',
  'JUNIT'      : '4.12',
  'LEAKCANARY' : '1.4-beta2',
  'MOCKITO'    : '2.0.48-beta'
]

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

configurations {
  compile {
    testCompile.extendsFrom compile
    androidTestCompile.extendsFrom testCompile
  }
}

dependencies {
  apt "com.jakewharton:butterknife-compiler:$LIB.BUTTERKNIFE"
  //apt "com.google.dagger:dagger-compiler:$LIB.DAGGER"
  apt "io.requery:requery-processor:$LIB.REQUERY"

  compile "com.android.support:appcompat-v7:$LIB.SUPPORT"
  compile "com.android.support:design:$LIB.SUPPORT"

  compile "com.roughike:bottom-bar:$LIB.BOTTOMBAR"

  compile "com.jakewharton:butterknife:$LIB.BUTTERKNIFE"

  //"com.google.dagger:dagger:$LIB.DAGGER",

  compile "com.google.code.gson:gson:$LIB.GSON"

  //TODO Remove when release
  compile "org.mockito:mockito-core:$LIB.MOCKITO"

  compile "com.squareup.okhttp3:okhttp:$LIB.OKHTTP"
  compile "com.squareup.okhttp3:logging-interceptor:$LIB.OKHTTP"
  compile "com.squareup.okhttp3:okhttp-android-support:$LIB.OKHTTP"

  compile "com.squareup.okio:okio:$LIB.OKIO"

  compile "com.squareup.retrofit2:retrofit:$LIB.RETROFIT"
  compile "com.squareup.retrofit2:adapter-rxjava:$LIB.RETROFIT"
  compile "com.squareup.retrofit2:converter-gson:$LIB.RETROFIT"

  compile "io.requery:requery:$LIB.REQUERY"
  compile "io.requery:requery-android:$LIB.REQUERY"

  compile "io.reactivex:rxandroid:$LIB.RXANDROID"
  compile "com.github.VictorAlbertos:RxCache:$LIB.RXCACHE"
  compile "io.reactivex:rxjava:$LIB.RXJAVA"

  //debugCompile "com.squareup.leakcanary:leakcanary-android:$LIB.LEAKCANARY"

  //releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$LIB.LEAKCANARY"

  testCompile "junit:junit:$LIB.JUNIT"
  testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$LIB.LEAKCANARY"
  testCompile "com.squareup.okhttp3:mockwebserver:$LIB.OKHTTP"

  androidTestCompile "com.android.support.test:runner:$LIB.RUNNER"
  androidTestCompile "com.android.support.test:rules:$LIB.RULES"
  androidTestCompile "com.google.dexmaker:dexmaker:$LIB.DEXMAKER"
  androidTestCompile "com.google.dexmaker:dexmaker-mockito:$LIB.DEXMAKER"
  androidTestCompile "com.android.support.test.espresso:espresso-core:$LIB.ESPRESSO"
  androidTestCompile "com.android.support.test.espresso:espresso-contrib:$LIB.ESPRESSO"
  androidTestCompile "com.android.support.test.espresso:espresso-intents:$LIB.ESPRESSO"
}

android {
  compileSdkVersion APP.COMPILE_SDK_VERSION
  buildToolsVersion APP.BUILD_TOOLS_VERSION

  defaultConfig {
    applicationId APP.APPLICATION_ID
    minSdkVersion APP.MIN_SDK_VERSION
    targetSdkVersion APP.TARGET_SDK_VERSION
    versionCode APP.VERSION_CODE
    versionName APP.VERSION_NAME

    multiDexEnabled true

    /*jackOptions {
      enabled true
    }*/

    testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
  }

  signingConfigs {
    release {
      storeFile SIGN.STORE_FILE
      storePassword SIGN.STORE_PASSWORD
      keyAlias SIGN.KEY_ALIAS
      keyPassword SIGN.KEY_PASSWORD
    }
  }

  buildTypes {
    debug {
      debuggable true
      minifyEnabled false
      //buildConfigField "boolean", "CONST", "true"
    }

    release {
      debuggable false
      minifyEnabled PROGUARD
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
      zipAlignEnabled true
      shrinkResources PROGUARD
    }
  }

  packagingOptions {
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/rxjava.properties'
  }

  compileOptions {
    encoding 'UTF-8'
    sourceCompatibility 1.7
    targetCompatibility 1.7
  }

  lintOptions {
    abortOnError false
  }

  testOptions.unitTests.all {
    testLogging {
      events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
    }
  }
}
